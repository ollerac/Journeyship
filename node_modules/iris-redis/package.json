{
  "name": "iris-redis",
  "version": "0.1.0",
  "description": "Thin node_redis wrapper to connect to Iris Couch's Redis service",
  "author": {
    "name": "Jason Smith",
    "email": "jhs@iriscouch.com"
  },
  "keywords": [
    "redis",
    "iriscouch"
  ],
  "homepage": "http://github.com/iriscouch/iris-redis",
  "repository": {
    "type": "git",
    "url": "git://github.com/iriscouch/iris-redis"
  },
  "engines": [
    "node"
  ],
  "dependencies": {
    "redis": "~0.7.2"
  },
  "devDependencies": {
    "tap": "~0.2.5"
  },
  "main": "./api.js",
  "readme": "## Redis on Iris Couch\n\n`iris-redis` is a very simple wrapper, 100% compatible with the [Node.js redis package][node_redis]. It simplifies connecting, and helps to see metadata about your server.\n\n## Example\n\n```javascript\nvar redis = require('iris-redis')\nvar client = redis.createClient(6379, \"redis.example.iriscouch.com\")\nclient.auth(\"s3cret\")\n\nclient.on(\"ready\", function() {\n  // Done! Hey, I said it was 100% compatible.\n  client.iris_config(function(er, config) {\n    if(er) throw er\n\n    console.log(\"Got my server config: %j\", config)\n    client.quit()\n  })\n})\n```\n\nThe output looks like this:\n\n```javascript\nGot my server config:\n{ '_config:datacenter': 'sj01.softlayer',\n  '_config:server': 'example',\n  '_config:max_memory': '20mb',\n  '_config:ip': '10.55.80.194',\n  '_config:port': '17162' }\n```\n\n## Easy AUTH command\n\nIris Couch requires an `AUTH` command in the format `redis.your_hostname.iriscouch.com:your_password`. To save you some trouble, the iris-redis package prepends the hostname in its `.auth()` wrapper.\n\nIn other words, if you run this: `client.auth(\"s3cret\")`\n\nthen iris-redis will convert that to this: `client.auth(\"redis.example.iriscouch.com:s3cret\")`\n\n## Automatic authentication.\n\nSince authentication is mandatory on Iris Couch, you can provide the `\"auth\"` key in the options.\n\n```javascript\nvar client = redis.createClient(6379, \"redis.example.iriscouch.com\", {auth: \"s3cret\"})\n```\n\n<a name=\"upgrading\"></a>\n## Upgrading to a direct connection\n\nIris Couch uses a reverse proxy&mdash;the same battle-hardened proxy that runs CouchDB. Unfortunately, this adds latency to Redis.\n\nIf you are in the right data center, you can connect directly to your server's IP address and port. The information is in the `_config/*` keys, or there is a convenience function.\n\n```javascript\nclient.iris_upgrade(function(er, new_client) {\n  if(er) throw er\n\n  // Hooray! This is a direct LAN connection to the back-end. Note, the original client already quit().\n  new_client.set(\"happy\", \"true\")\n  new_client.quit()\n})\n```\n\n## License\n\nApache 2.0\n\n[node_redis]: https://github.com/mranney/node_redis\n",
  "readmeFilename": "README.md",
  "_id": "iris-redis@0.1.0",
  "_from": "iris-redis@0.1.x"
}
